name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.19

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm run build

      - name: Archive dist folder
        run: tar -czf dist.tar.gz dist

      - name: Prepare release notes
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: |
          node <<'NODE'
          const fs = require('fs');
          const tag = process.env.TAG_NAME || '';
          const version = tag.startsWith('v') ? tag.slice(1) : tag;
          if (!version) {
            throw new Error('Tag name is empty; cannot derive version');
          }

          const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
          const escapeRegExp = (value) => value.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
          const headingPattern = new RegExp(`^##\\s+${escapeRegExp(version)}(\\s|-|$)`, 'm');
          const headingMatch = changelog.match(headingPattern);
          if (!headingMatch) {
            throw new Error(`Could not find changelog entry for version ${version}`);
          }

          const start = changelog.indexOf(headingMatch[0]);
          const after = changelog.slice(start);
          const nextHeadingIndex = after.indexOf('\n## ');
          const section = after.slice(0, nextHeadingIndex === -1 ? after.length : nextHeadingIndex).trim();
          if (!section) {
            throw new Error(`Changelog entry for version ${version} is empty`);
          }
          fs.writeFileSync('release-notes.md', section + '\n');
          NODE

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body_path: release-notes.md
          files: |
            dist.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
